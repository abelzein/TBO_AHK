#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases Mod 71 Last modified by Thomas
#SingleInstance force	
#NoTrayIcon	
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
#Hotstring C R

; REMOVE WHITESPACE IN CLIPBOARD

F2::
Clipboard := StrReplace(Clipboard, A_Space, "")
Clipboard := StrReplace(Clipboard, A_Tab, "")
return


; START GUI

::+tbo::
Originticket()
return


; STOP GUI

Close()
{
Gui, Destroy
Return
}

; Run seperate window for IT ticket template
::+it::
Run, O:\Clarify\AHK\IT_Ticket_BB.ahk
return

; Run seperate window Service case aflog template
::+sc::
Run, O:\Clarify\AHK\Service_Case_aflog.ahk
return

; Run seperate window for SMS templates
::+sms::
Run, O:\Clarify\AHK\SMS.ahk
return

; Run seperate window for IT ticket mob templates
::+sms::
Run, O:\Clarify\AHK\IT_Ticket_Mob.ahk
return

ShowCustomMsgBox() {
Gui, New, +AlwaysOnTop
Gui, Color, FDFDFD
Gui, Font, s10, Segoe UI
Gui, Color, FDFDFD, Segoe UI Bold
Gui, Add, Text,, RELEASE 24.12.1
Gui, Font, s10, Segoe UI
Gui, Color, FDFDFD, Segoe UI Bold
Gui, Add, Text,, WHAT'S NEW
Gui, Add, Text,, - Added A2A chat template vor VCC
Gui, Add, Text,, - Changes to the FC logs export
Gui, Add, Text,, - Bugfixes for export logs to Excel
Gui, Add, Text,, - General bugfixing and structural improvements
Gui, Add, Button, gCloseMsgBox, OK
Gui, Show, ,Release Info
}

CloseMsgBox:
Gui, Destroy
Return

UpdateInfo()
{
ShowCustomMsgBox()
}


; OUTLOOK SCRIPTS

; START OUTLOOK

CheckOutlook()
{
Process, Exist, Outlook.exe
If Not ErrorLevel
{
	Run, Outlook.exe	; You may need to specify the full path here.
	WinWaitActive, ahk_exe Outlook.exe
	sleep 2000
	Msgbox, Wait for Outlook
}
}

Clear()
{
global
GuiControl, ,Tissue
GuiControl, ,Staken
GuiControl, ,Contact
GuiControl, ,Klantennummer
GuiControl, ,Probleem
GuiControl, ,Uitgevacties
GuiControl, ,MSISDN
GuiControl, ,Problemshort
GuiControl, ,Scid
GuiControl, ,Error
GuiControl, ,Extdescr
GuiControl, ,Timer
GuiControl, ,Ncstatus
GuiControl, ,Crdcstatus
GuiControl, ,Mnpstatus
GuiControl, ,Taskerror
GuiControl, ,Type
GuiControl, ,Status
GuiControl, ,Phoneinfo
GuiControl, ,Watchinfo
GuiControl, ,Iccid
GuiControl, ,Imsi
GuiControl, ,Watcheid
GuiControl, ,Watchiccid
GuiControl, ,SIMOLO
GuiControl, ,CMRNROLO
GuiControl, ,Password
GuiControl, ,Date
GuiControl, ,EMAIL
GuiControl, ,Reason
GuiControl, ,Flow
GuiControl, ,Step
GuiControl, ,Timestamp
GuiControl, ,Softwareinfo
GuiControl, ,RFTicket
GuiControl, ,Date
GuiControl, ,Ordernr
GuiControl, ,PEGAStatus
GuiControl, ,LinkBSS
GuiControl, ,NCStatus
GuiControl, ,FusionStatus
GuiControl, ,Tasklink
GuiControl, ,Scid2
GuiControl, ,SEVER
GuiControl, ,Timestamp
GuiControl, ,Domeinmail
GuiControl, ,Mailsender
GuiControl, ,Mailrec
GuiControl, ,Dateandtime
GuiControl, ,Spamcause
GuiControl, ,Vadenaam
GuiControl, ,Id
GuiControl, ,Olopxtelefoonnummer
GuiControl, ,Oloscid
GuiControl, ,Olonaam  
GuiControl, ,Modemmac
GuiControl, ,Pakket
GuiControl, ,Repdienst
GuiControl, ,Service
GuiControl, ,Zenderpakket
GuiControl, ,Serienr
GuiControl, ,Telefoonnummer
GuiControl, ,ActionFlow
GuiControl, ,SCidAflog
GuiControl, ,TodoITBB
Return
}

; MAIN MENU

OriginTicket()
{
CopyToStartup()
Gui, Destroy
Gui, Font, s10, Segoe UI
Gui, Color, FDFDFD
Gui, Add, Text,, TBO TEMPLATES
Gui, Add, Text,, 
Gui, Add, Button, gSCTemplateJust, SERVICE CASE LOG
Gui, Add, Button, gSms, SMS
Gui, Add, Button, gMailCMR, MAIL
Gui, Add, Button, gTestCalls, TESTCALL
Gui, Add, Button, gFTTHCOAX, COAX <> FTTH CONVERSION
Gui, Add, Text,, 
Gui, Add, Button, gTBOAccess, ACCESS
Gui, Add, Button, gTBOServices, SERVICES
Gui, Add, Text,, 
Gui, Add, Button, gHotkeyInfo, Info AutoHotKey
Gui, Add, Button, gUpdateAHK, CHECK FOR UPDATES
Gui, Add, Button, x205 y5 gUpdateInfo, v24.12.1
Gui, Show
}

CopyToStartup()
{
    EnvGet, StartupFolder, USERPROFILE
    StartupFolder .= "\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup\"

    files := ["O:\Clarify\AHK\IT_Ticket_BB.ahk", "O:\Clarify\AHK\Service_Case_aflog.ahk", "O:\Clarify\AHK\SMS.ahk", "O:\Clarify\AHK\IT_Ticket_Mob.ahk"]

    Loop, % files.MaxIndex()
    {
        FilePath := files[A_Index]
        FileName := RegExReplace(FilePath, ".*\\", "")
        DestPath := StartupFolder . FileName

        IfNotExist, %DestPath%
        {
            FileCopy, %FilePath%, %DestPath%
        }
    }
}


UpdateAHK() {
    encodedURL := "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FiZWx6ZWluL1RCT19BSEsvbWFpbi9UQk9fMjQuNQ=="

    rawURL := Decode(encodedURL)

    downloadPath := A_Desktop . "\"
    TargetFilePathUp := downloadPath . "Update_script.ahk"
    TargetFilePathTBO := downloadPath . "TBO_Templates.ahk"

    EnvGet, appData, APPDATA
    startupDir := appData . "\Microsoft\Windows\Start Menu\Programs\Startup\"

    downloadedFile := DownloadFile(rawURL, downloadPath)
    if (downloadedFile) {

        shortcutPathUpdate := startupDir . "Update_script.lnk"
        shortcutPathTBOFile := startupDir . "TBO_Templates.lnk"
        
        CreateShortcutUpdate(TargetFilePathUp, shortcutPathUpdate)
        CreateShortcutTBO(TargetFilePathTBO, shortcutPathTBOFile)
    }
}

Decode(Str) {
    DllCall("Crypt32.dll\CryptStringToBinaryW", "Str", Str, "UInt", 0, "UInt", 0x1, "Ptr", 0, "UInt*", Len)
    VarSetCapacity(Bin, Len)
    DllCall("Crypt32.dll\CryptStringToBinaryW", "Str", Str, "UInt", 0, "UInt", 0x1, "Str", Bin, "UInt*", Len)
    return StrGet(&Bin, Len, "UTF-8")
}

GetUniqueFileName(baseName) {
    return baseName "_" "Templates.ahk"
}

DownloadFile(url, dirPath) {
    fileName := GetUniqueFileName("TBO")
    filePath := dirPath . fileName
    powershellCommand := "Invoke-WebRequest -Uri '" . url . "' -OutFile '" . filePath . "'"

    FileAppend, %powershellCommand%`n, %A_Temp%\PowershellCommand.txt

    RunWait, %comspec% /c powershell.exe -Command "%powershellCommand%" 2>
